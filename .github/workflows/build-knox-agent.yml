name: Build Knox Agent APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: agent-app/package-lock.json
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.0
        
    - name: Install dependencies
      working-directory: ./agent-app
      run: npm ci
      
    - name: Add Android platform
      working-directory: ./agent-app
      run: |
        npx cordova platform remove android || true
        npx cordova platform add android
      
    - name: Build Debug APK
      working-directory: ./agent-app
      run: npx cordova build android --debug -- --stacktrace
      
    - name: Build Release APK
      working-directory: ./agent-app
      run: npx cordova build android --release -- --packageType=apk --stacktrace

    - name: Show build outputs
      working-directory: ./agent-app
      run: ls -R platforms/android/app/build/outputs

    - name: Sign release APKs
      if: ${{ success() && (env.ANDROID_KEYSTORE_BASE64 != '') }}
      working-directory: ./agent-app
      run: |
        echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > $HOME/android.keystore
        APKSIGNER=$(find ${ANDROID_SDK_ROOT:-$ANDROID_HOME}/build-tools -name apksigner -type f | head -n 1)
        if [ -z "$APKSIGNER" ]; then
          echo "apksigner not found in build-tools" >&2
          exit 1
        fi
        for apk in platforms/android/app/build/outputs/apk/release/*.apk; do
          if [ -f "$apk" ]; then
            "$APKSIGNER" sign \
              --ks $HOME/android.keystore \
              --ks-pass env:ANDROID_KEYSTORE_PASSWORD \
              --key-pass env:ANDROID_KEY_PASSWORD \
              --ks-key-alias "$ANDROID_KEY_ALIAS" \
              "$apk"
            "$APKSIGNER" verify "$apk"
          fi
        done
        rm -f $HOME/android.keystore

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: knox-agent-debug
        path: agent-app/platforms/android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: knox-agent-release
        path: |
          agent-app/platforms/android/app/build/outputs/apk/release/*.apk
          agent-app/platforms/android/app/build/outputs/bundle/release/*.aab
